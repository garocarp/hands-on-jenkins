#!/usr/bin/groovy

pipeline {
    agent any
    environment {
        PATH="/usr/local/bin:$PATH"
    }
	
    options {
        disableConcurrentBuilds()
    }

    stages {

        stage("Build") {
            steps { 
		    buildApp() }
		}

	}
}


// steps
def buildApp() {
	dir ('section_4/code/cd_pipeline' ) {
		sh "env"
		def appImage = docker.build("hands-on-jenkins/myapp:${BUILD_NUMBER}")
		sh "docker images"
	}
}

def deploy(environment) {

	def containerName = ''
	def port = ''

	if ("${environment}" == 'dev') {
		containerName = "app_dev"
		port = "8888"
	} 
	else {
		println "Environment not valid"
		System.exit(0)
	}
	sh "env"
	sh "docker ps -f name=${containerName} -q | xargs --no-run-if-empty docker stop"
	sh "docker ps -a -f name=${containerName} -q | xargs -r docker rm"
	sh "docker run -d -p ${port}:5000 --name ${containerName} hands-on-jenkins/myapp:${BUILD_NUMBER}"

}

